basePath: /v1/
definitions:
  model.Login:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  model.Signup:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      rancherID:
        type: string
    type: object
  model.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      idn:
        type: integer
      name:
        type: string
      password:
        type: string
      rancherID:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:9000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This server.
  license:
    name: Proprietary
    url: CopyrightÂ©
  termsOfService: http://swagger.io/terms/
  title: Themis API
  version: "1.0"
paths:
  /admin/auth:
    get:
      consumes:
      - application/json
      parameters:
      - description: User model
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      summary: Validate a user
      tags:
      - Login
  /admin/deleteuser/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
      summary: Delete a user "DeleteUserByID"
      tags:
      - Crud
  /admin/getuser/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      summary: Find a user "FindUserById"
      tags:
      - Crud
  /admin/getusers:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
      summary: Lists all users "Find all users"
      tags:
      - Crud
  /admin/updateuser/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User model
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      summary: Update a user "UpdateUser"
      tags:
      - Crud
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login model
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.Login'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      summary: Login to app
      tags:
      - Login
  /logout:
    post:
      produces:
      - text/plain
      responses:
        "200":
          description: OK
      summary: Logout from app
      tags:
      - Login
  /readcookie:
    get:
      consumes:
      - application/json
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      summary: ReadCookie to app
      tags:
      - Cookie
  /refresh:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
      summary: Refresh Token
      tags:
      - Login
  /signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: Signup model
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.Signup'
      produces:
      - text/plain
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
      summary: Signup to app
      tags:
      - Login
swagger: "2.0"
