# Template docker-push

# This template allows you to build and push your docker image to a Docker Hub account.
# The workflow allows running tests, code linting and security scans on feature branches (as well as master).
# The docker image will be validated and pushed to the docker registry after the code is merged to master.

# Prerequisites: $DOCKERHUB_USERNAME, $DOCKERHUB_PASSWORD setup as deployment variables

image: atlassian/default-image:3

pipelines:
  default:
  - step:
      name: Environment
      image: docker.io/library/golang:1.20.2
      script:
      - git fetch --tags
      - echo "export IMAGE_NAME=$BITBUCKET_REPO_SLUG" >> env.sh
      - echo "export VERSION=$(git describe --always --tags --dirty)" >> env.sh
      - echo "export IMAGE=075899289117.dkr.ecr.eu-north-1.amazonaws.com/dockyards-backend" >> env.sh
      - cat env.sh
      artifacts:
      - env.sh
  - step:
      name: Test
      image: docker.io/library/golang:1.20.2
      script:
      - go test ./... -v
  - step:
      name: Build
      script:
      - source env.sh
      - docker build . --file Dockerfile --tag ${IMAGE_NAME}
      - docker save ${IMAGE_NAME} --output "${IMAGE_NAME}.tar"
      services:
      - docker
      caches:
      - docker
      artifacts:
      - "*.tar"
  - step:
      name: Deploy
      deployment: Production
      image: docker.io/amazon/aws-cli:2.11.8
      script:
      - source env.sh
      - aws ecr get-login-password | docker login --username "AWS" --password-stdin "075899289117.dkr.ecr.eu-north-1.amazonaws.com"
      - docker load --input "${IMAGE_NAME}.tar"
      - docker tag "${IMAGE_NAME}" "${IMAGE}:${VERSION}"
      - docker push "${IMAGE}:${VERSION}"
      services:
      - docker
