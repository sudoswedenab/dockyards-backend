openapi: "3.0.0"
info:
  version: 0.1.0
  title: sudo
  description: no
paths:
  /sudo/clusters:
    get:
      operationId: getClusters
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../v1/spec.yaml#/components/schemas/cluster'
        500: {}
  /sudo/kubeconfigs/{cluster_id}:
    get:
      operationId: getKubeconfig
      parameters:
      - name: cluster_id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                type: string
        500: {}
  /sudo/deployments:
    get:
      operationId: getDeployments
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../v1/spec.yaml#/components/schemas/deployment'
        500: {}
    post:
      operationId: createDeployment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../v1/spec.yaml#/components/schemas/deployment'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '../v1/spec.yaml#/components/schemas/deployment'
        500: {}
  /sudo/credentials/{credential_id}:
    get:
      operationId: getCredential
      parameters:
      - name: credential_id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '../v1/spec.yaml#/components/schemas/credential'
        500: {}
  /sudo/organizations:
    get:
      operationId: getOrganizations
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../v1/spec.yaml#/components/schemas/organization'
        500: {}
  /sudo/deployments/{deployment_id}:
    get:
      operationId: getDeployment
      parameters:
      - name: deployment_id
        in: path
        required: true
        schema:
          type: string
      responses:
       200:
         content:
           application/json:
             schema: 
               $ref: '../v1/spec.yaml#/components/schemas/deployment'
       500: {}
  /sudo/deployments/{deployment_id}/status:
    post:
      operationId: createDeploymentStatus
      parameters:
      - name: deployment_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../v1/spec.yaml#/components/schemas/deployment_status'
      responses:
        201: {}
        500: {}
